version: "3.8"

services:
  # Production web service
  web:
    build:
      context: ../../src/web
      dockerfile: ../infrastructure/docker/Dockerfile
      target: production
      args:
        NODE_ENV: production
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_VERSION=${APP_VERSION}
      - TZ=UTC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - app-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    user: node

  # Development service
  dev:
    build:
      context: ../../src/web
      dockerfile: ../infrastructure/docker/Dockerfile
      target: development
      args:
        NODE_ENV: development
    ports:
      - "3000:3000"  # React development server
      - "9229:9229"  # Node.js debugging port
    volumes:
      - ../../src/web:/app:cached
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    command: npm run start:dev
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    user: node

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
    driver_opts:
      encrypted: "true"

volumes:
  node_modules:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/node_modules
      o: bind